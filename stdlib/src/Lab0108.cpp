#include <iomanip>

#include "bel.hpp"

карыстаць вобласць std;

вобласць беларусь
{
	клас лаб0108
	{
	публіч:
		стат пуст вывадМатрыцы(вектар<вектар<цэл>> мас)
		{
			для(цэл і = 0; і < 10 - 1; і++)
			{
				для(цэл ж = 0; ж < 10; ж++)
				{
					вывад << setw(3) << мас[і][ж];
				}
				вывад << абзац;
			}
			вывад << абзац;

			для(цэл ж = 0; ж < 10; ж++)
			{
				вывад << setw(3) << мас[9][ж];
			}
			вывад << абзац;
			вывад << абзац;
		}

		стат пуст запуск()
		{
			вектар<вектар<цэл>> матр(10, вектар<цэл>(10, 0));

			для(цэл і = 0; і < 10 - 1; і++)
			{
				для(цэл ж = 0; ж < 10; ж++)
				{
					матр[і][ж] = rand() % 10;
				}
			}

			для(цэл ж = 0; ж < 10; ж++)
			{
				матр[9][ж] = 0;
			}

			для(цэл ж = 0; ж < 10; ж++)
			{
				для(цэл і = 0; і < 10 - 1; і++)
				{
					калі (матр[і][ж] % 2 == 0)
					{
						матр[9][ж] += матр[і][ж];
					}
				}
			}

			вывадМатрыцы(матр);

			для(цэл ж = 0; ж < 10; ж++)
			{
				для(цэл k = 0; k < 10 - 1; k++)
				{
					для(цэл і = 0; і < 10 - 1 - k; і++)
					{
						калі (матр[і][ж] > матр[і + 1][ж])
						{
							цэл temp = матр[і][ж];
							матр[і][ж] = матр[і + 1][ж];
							матр[і + 1][ж] = temp;
						}
					}
				}
			}

			вывадМатрыцы(матр);

			для(цэл k = 0; k < 10; k++)
			{
				для(цэл ж = 0; ж < 10 - 1 - k; ж++)
				{
					калі (матр[9][ж] > матр[9][ж + 1])
					{
						для(цэл і = 0; і < 10; і++)
						{
							цэл temp = матр[і][ж];
							матр[і][ж] = матр[і][ж + 1];
							матр[і][ж + 1] = temp;
						}
					}
				}
			}

			вывадМатрыцы(матр);
		}
	};
}
